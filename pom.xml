<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<groupId>com.ibm.epricer</groupId>
	<artifactId>epricer-service-gateway</artifactId>
	<version>0.0.1</version>
	<name>Service Gateway</name>
	<description>Service gateway based on Spring Cloud Routing</description>

	<properties>
		<java.version>11</java.version>
		<spring-cloud.version>2021.0.0</spring-cloud.version>
		<dockerfile-maven-version>1.4.10</dockerfile-maven-version>
		<skipDockerPush>false</skipDockerPush>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gateway-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-jose</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springdoc</groupId>
		    <artifactId>springdoc-openapi-webflux-ui</artifactId>
		    <version>1.5.5</version>
		</dependency>		
		<dependency>
			<groupId>com.ibm.db2</groupId>
			<artifactId>jcc</artifactId>
			<!-- the version is managed by Spring boot -->
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<!-- the version is managed by Spring boot -->
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.2.8</version>
			</dependency>
			<dependency>
			    <groupId>io.netty</groupId>
			    <artifactId>netty-codec-http</artifactId>
			    <version>4.1.72.Final</version>
			</dependency>			
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>exec-maven-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>push</id>
						<phase>deploy</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>com.ibm.epricer.gateway.devops.BuildAndDeploy</mainClass>
							<skip>${skipDockerPush}</skip>
							<arguments>
								<argument>target/${project.build.finalName}.jar</argument>
								<argument>${cirrus.registry}</argument>
								<argument>${cirrus.project}</argument>
								<argument>${project.artifactId}</argument>
								<argument>${cirrus.username}</argument>
								<argument>${cirrus.password}</argument>
								<argument>${ops.gateway}</argument>
								<argument>${ops.gatewayuser}</argument>
								<argument>${ops.gatewaypwd}</argument>
								<argument>${build.number}</argument>
								<argument>${build.id}</argument>
								<argument>${build.log}</argument>
								<argument>${workload.repo}</argument>
								<argument>${workload.repouser}</argument>
								<argument>${workload.repopassword}</argument>								
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>			
		</plugins>
	</build>
</project>
